{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\WorkProgressTimesheet\\\\FrontEnd\\\\src\\\\employee-calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faCalendarAlt, faClipboardList, faBell } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarPage = () => {\n  _s();\n  let navigate = useNavigate();\n\n  // Function to add days to a date\n  const addDays = (date, days) => {\n    const result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  };\n\n  // Helper function to format date for display\n  const formatDate = date => {\n    return date.toLocaleDateString('en-GB', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      weekday: 'long'\n    });\n  };\n\n  // Helper function to format date as a key\n  const formatDateKey = date => {\n    return date.toISOString().split('T')[0];\n  };\n\n  // Initialize state to today and the following two days\n  const [currentDateRange, setCurrentDateRange] = useState({\n    startDate: new Date(),\n    endDate: addDays(new Date(), 2)\n  });\n  const [tasks, setTasks] = useState({});\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const {\n        startDate,\n        endDate\n      } = currentDateRange;\n      const userId = localStorage.getItem('userId');\n      const formattedStartDate = startDate.toISOString().split('T')[0];\n      const formattedEndDate = endDate.toISOString().split('T')[0];\n      try {\n        const response = await axios.get(`http://localhost:8081/api/task/three-day-window`, {\n          headers: {\n            'user-id': userId // Ensure this header name matches what your server expects\n          },\n          params: {\n            startDate: startDate.toISOString().split('T')[0],\n            endDate: endDate.toISOString().split('T')[0]\n          }\n        });\n        const newTasks = {};\n        response.data.forEach(task => {\n          const key = new Date(task.dueDate).toISOString().split('T')[0];\n          if (!newTasks[key]) {\n            newTasks[key] = [];\n          }\n          newTasks[key].push(task);\n        });\n        setTasks(newTasks);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [currentDateRange]);\n\n  // Handler for previous arrow click\n  const handlePrevClick = () => {\n    setCurrentDateRange(prevRange => {\n      const newStart = addDays(prevRange.startDate, -3);\n      return {\n        startDate: newStart,\n        endDate: addDays(newStart, 2)\n      };\n    });\n  };\n\n  // Handler for next arrow click\n  const handleNextClick = () => {\n    setCurrentDateRange(prevRange => {\n      const newStart = addDays(prevRange.endDate, 1);\n      return {\n        startDate: newStart,\n        endDate: addDays(newStart, 2)\n      };\n    });\n  };\n\n  // Event handlers for button clicks\n  const handleHomeClick = () => {\n    navigate(\"/employee-dashboard\");\n  };\n  const handleCalendarClick = () => {\n    navigate(\"/employee-calendar\");\n  };\n  const handleClipboardClick = () => {\n    navigate(\"/employee-tasks\");\n  };\n  const handleBellClick = () => {\n    navigate(\"/employee-notifications\");\n  };\n\n  // TaskCard component for displaying task details\n  const TaskCard = ({\n    task\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.taskCard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.taskName,\n      children: task.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.taskDueDate,\n      children: [\"Due Date: \", formatDate(task.dueDate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.taskDescription,\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n\n  // TaskColumn component for displaying tasks for a given date\n  const TaskColumn = ({\n    date\n  }) => {\n    const key = date.toISOString().split('T')[0];\n    const tasksForDate = tasks[key] || [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.taskColumn,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.dayHeader,\n        children: formatDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), tasksForDate.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.taskCard,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.taskName,\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.taskDueDate,\n          children: [\"Due Date: \", formatDate(new Date(task.dueDate))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.taskDescription,\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Generate an array of dates for the TaskColumns\n  const datesArray = Array.from({\n    length: 3\n  }, (_, i) => addDays(currentDateRange.startDate, i));\n\n  // Calendar Navigator component with handlers\n  const CalendarNavigator = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.navigatorContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.navigatorButton,\n      onClick: handlePrevClick,\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.dateRange,\n      children: `${formatDate(currentDateRange.startDate)} - ${formatDate(currentDateRange.endDate)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.navigatorButton,\n      onClick: handleNextClick,\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.topBar,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...styles.topBarItem,\n          ...styles.button\n        },\n        onClick: handleHomeClick,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faHome,\n          style: styles.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...styles.topBarItem,\n          ...styles.button\n        },\n        onClick: handleCalendarClick,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCalendarAlt,\n          style: styles.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...styles.topBarItem,\n          ...styles.button\n        },\n        onClick: handleClipboardClick,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faClipboardList,\n          style: styles.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...styles.topBarItem,\n          ...styles.button\n        },\n        onClick: handleBellClick,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faBell,\n          style: styles.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarNavigator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.columnsContainer,\n      children: datesArray.map((date, index) => /*#__PURE__*/_jsxDEV(TaskColumn, {\n        date: date\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles for the UI components\n_s(CalendarPage, \"Bl0oCJfMyh6NqpHP/PnP86d5CCA=\", false, function () {\n  return [useNavigate];\n});\n_c = CalendarPage;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    backgroundColor: '#E5E5E5'\n  },\n  topBar: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '10px',\n    backgroundColor: '#00BCD4'\n  },\n  topBarItem: {\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '20px',\n    height: '32px',\n    backgroundColor: '#FFFFFF',\n    borderRadius: '50%',\n    margin: '20px',\n    border: 'none'\n  },\n  button: {\n    cursor: 'pointer',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: '20px',\n    backgroundColor: '#00BCD4',\n    border: 'none'\n  },\n  icon: {\n    fontSize: '24px',\n    color: 'white'\n  },\n  navigatorContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '10px',\n    backgroundColor: '#00BCD4'\n  },\n  navigatorButton: {\n    cursor: 'pointer',\n    fontSize: '16px',\n    color: '#FFFFFF',\n    backgroundColor: 'transparent',\n    border: 'none',\n    margin: '0 10px'\n  },\n  dateRange: {\n    color: '#FFFFFF',\n    fontSize: '16px',\n    margin: '0 10px'\n  },\n  columnsContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '10px'\n  },\n  taskColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '0 10px',\n    backgroundColor: '#00BCD4',\n    borderRadius: '6px',\n    width: '200px',\n    padding: '10px'\n  },\n  dayHeader: {\n    color: '#FFFFFF',\n    marginBottom: '10px',\n    fontSize: '18px'\n  },\n  taskCard: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: '4px',\n    margin: '10px 0',\n    padding: '10px'\n  },\n  taskName: {\n    fontSize: '16px',\n    fontWeight: 'bold',\n    marginBottom: '4px'\n  },\n  taskDueDate: {\n    fontSize: '14px',\n    marginBottom: '4px'\n  },\n  taskDescription: {\n    fontSize: '12px',\n    marginBottom: '4px'\n  }\n};\nexport default CalendarPage;\nvar _c;\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","FontAwesomeIcon","faHome","faCalendarAlt","faClipboardList","faBell","jsxDEV","_jsxDEV","CalendarPage","_s","navigate","addDays","date","days","result","Date","setDate","getDate","formatDate","toLocaleDateString","day","month","year","weekday","formatDateKey","toISOString","split","currentDateRange","setCurrentDateRange","startDate","endDate","tasks","setTasks","fetchTasks","userId","localStorage","getItem","formattedStartDate","formattedEndDate","response","get","headers","params","newTasks","data","forEach","task","key","dueDate","push","error","console","handlePrevClick","prevRange","newStart","handleNextClick","handleHomeClick","handleCalendarClick","handleClipboardClick","handleBellClick","TaskCard","style","styles","taskCard","children","taskName","name","fileName","_jsxFileName","lineNumber","columnNumber","taskDueDate","taskDescription","description","TaskColumn","tasksForDate","taskColumn","dayHeader","map","index","datesArray","Array","from","length","_","i","CalendarNavigator","navigatorContainer","navigatorButton","onClick","dateRange","container","topBar","topBarItem","button","icon","columnsContainer","_c","display","flexDirection","height","backgroundColor","justifyContent","padding","alignItems","width","borderRadius","margin","border","cursor","fontSize","color","marginBottom","fontWeight","$RefreshReg$"],"sources":["C:/Projects/WorkProgressTimesheet/FrontEnd/src/employee-calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faCalendarAlt, faClipboardList, faBell } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst CalendarPage = () => {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  // Function to add days to a date\r\n  const addDays = (date, days) => {\r\n    const result = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  };\r\n\r\n  // Helper function to format date for display\r\n  const formatDate = (date) => {\r\n    return date.toLocaleDateString('en-GB', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      weekday: 'long',\r\n    });\r\n  };\r\n\r\n  // Helper function to format date as a key\r\n  const formatDateKey = (date) => {\r\n    return date.toISOString().split('T')[0];\r\n  };\r\n\r\n  // Initialize state to today and the following two days\r\n  const [currentDateRange, setCurrentDateRange] = useState({\r\n    startDate: new Date(),\r\n    endDate: addDays(new Date(), 2),\r\n  });\r\n\r\n  const [tasks, setTasks] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      const { startDate, endDate } = currentDateRange;\r\n      const userId = localStorage.getItem('userId');\r\n      const formattedStartDate = startDate.toISOString().split('T')[0];\r\n      const formattedEndDate = endDate.toISOString().split('T')[0];\r\n      \r\n      try {\r\n        const response = await axios.get(`http://localhost:8081/api/task/three-day-window`, {\r\n          headers: {\r\n            'user-id': userId,  // Ensure this header name matches what your server expects\r\n          },\r\n          params: {\r\n            startDate: startDate.toISOString().split('T')[0],\r\n            endDate: endDate.toISOString().split('T')[0]\r\n          }\r\n        });\r\n        const newTasks = {};\r\n        response.data.forEach(task => {\r\n          const key = new Date(task.dueDate).toISOString().split('T')[0];\r\n          if (!newTasks[key]) {\r\n            newTasks[key] = [];\r\n          }\r\n          newTasks[key].push(task);\r\n        });\r\n        setTasks(newTasks);\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      }\r\n    };\r\n    \r\n    fetchTasks();\r\n  }, [currentDateRange]);\r\n\r\n  // Handler for previous arrow click\r\n  const handlePrevClick = () => {\r\n    setCurrentDateRange((prevRange) => {\r\n      const newStart = addDays(prevRange.startDate, -3);\r\n      return { startDate: newStart, endDate: addDays(newStart, 2) };\r\n    });\r\n  };\r\n\r\n  // Handler for next arrow click\r\n  const handleNextClick = () => {\r\n    setCurrentDateRange((prevRange) => {\r\n      const newStart = addDays(prevRange.endDate, 1);\r\n      return { startDate: newStart, endDate: addDays(newStart, 2) };\r\n    });\r\n  };\r\n\r\n  // Event handlers for button clicks\r\n  const handleHomeClick = () => {\r\n    navigate(\"/employee-dashboard\");\r\n  };\r\n\r\n  const handleCalendarClick = () => {\r\n    navigate(\"/employee-calendar\");\r\n  };\r\n\r\n  const handleClipboardClick = () => {\r\n    navigate(\"/employee-tasks\");\r\n  };\r\n\r\n  const handleBellClick = () => {\r\n    navigate(\"/employee-notifications\");\r\n  };\r\n\r\n  // TaskCard component for displaying task details\r\n  const TaskCard = ({ task }) => (\r\n    <div style={styles.taskCard}>\r\n      <div style={styles.taskName}>{task.name}</div>\r\n      <div style={styles.taskDueDate}>Due Date: {formatDate(task.dueDate)}</div>\r\n      <div style={styles.taskDescription}>{task.description}</div>\r\n    </div>\r\n  );\r\n\r\n  // TaskColumn component for displaying tasks for a given date\r\n  const TaskColumn = ({ date }) => {\r\n    const key = date.toISOString().split('T')[0];\r\n    const tasksForDate = tasks[key] || [];\r\n    return (\r\n      <div style={styles.taskColumn}>\r\n        <div style={styles.dayHeader}>{formatDate(date)}</div>\r\n        {tasksForDate.map((task, index) => (\r\n          <div key={index} style={styles.taskCard}>\r\n            <div style={styles.taskName}>{task.name}</div>\r\n            <div style={styles.taskDueDate}>Due Date: {formatDate(new Date(task.dueDate))}</div>\r\n            <div style={styles.taskDescription}>{task.description}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Generate an array of dates for the TaskColumns\r\n  const datesArray = Array.from({ length: 3 }, (_, i) => \r\n    addDays(currentDateRange.startDate, i)\r\n  );\r\n\r\n  // Calendar Navigator component with handlers\r\n  const CalendarNavigator = () => (\r\n    <div style={styles.navigatorContainer}>\r\n      <button style={styles.navigatorButton} onClick={handlePrevClick}>{\"<\"}</button>\r\n      <div style={styles.dateRange}>\r\n        {`${formatDate(currentDateRange.startDate)} - ${formatDate(currentDateRange.endDate)}`}\r\n      </div>\r\n      <button style={styles.navigatorButton} onClick={handleNextClick}>{\">\"}</button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.topBar}>\r\n        <button style={{ ...styles.topBarItem, ...styles.button }} onClick={handleHomeClick}>\r\n          <FontAwesomeIcon icon={faHome} style={styles.icon} />\r\n        </button>\r\n        <button style={{ ...styles.topBarItem, ...styles.button }} onClick={handleCalendarClick}>\r\n          <FontAwesomeIcon icon={faCalendarAlt} style={styles.icon} />\r\n        </button>\r\n        <button style={{ ...styles.topBarItem, ...styles.button }} onClick={handleClipboardClick}>\r\n          <FontAwesomeIcon icon={faClipboardList} style={styles.icon} />\r\n        </button>\r\n        <button style={{ ...styles.topBarItem, ...styles.button }} onClick={handleBellClick}>\r\n          <FontAwesomeIcon icon={faBell} style={styles.icon} />\r\n        </button>\r\n      </div>\r\n      <CalendarNavigator />\r\n      <div style={styles.columnsContainer}>\r\n        {datesArray.map((date, index) => (\r\n          <TaskColumn key={index} date={date} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Styles for the UI components\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100vh',\r\n    backgroundColor: '#E5E5E5',\r\n  },\r\n  topBar: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '10px',\r\n    backgroundColor: '#00BCD4',\r\n  },\r\n  topBarItem: {\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '20px',\r\n    height: '32px',\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: '50%',\r\n    margin: '20px',\r\n    border: 'none',\r\n  },\r\n  button: {\r\n    cursor: 'pointer',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: '20px',\r\n    backgroundColor: '#00BCD4',\r\n    border: 'none',\r\n  },\r\n  icon: {\r\n    fontSize: '24px',\r\n    color: 'white',\r\n  },\r\n  navigatorContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n    backgroundColor: '#00BCD4',\r\n  },\r\n  navigatorButton: {\r\n    cursor: 'pointer',\r\n    fontSize: '16px',\r\n    color: '#FFFFFF',\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    margin: '0 10px',\r\n  },\r\n  dateRange: {\r\n    color: '#FFFFFF',\r\n    fontSize: '16px',\r\n    margin: '0 10px',\r\n  },\r\n  columnsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '10px',\r\n  },\r\n  taskColumn: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: '0 10px',\r\n    backgroundColor: '#00BCD4',\r\n    borderRadius: '6px',\r\n    width: '200px',\r\n    padding: '10px',\r\n  },\r\n  dayHeader: {\r\n    color: '#FFFFFF',\r\n    marginBottom: '10px',\r\n    fontSize: '18px',\r\n  },\r\n  taskCard: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: '4px',\r\n    margin: '10px 0',\r\n    padding: '10px',\r\n  },\r\n  taskName: {\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n    marginBottom: '4px',\r\n  },\r\n  taskDueDate: {\r\n    fontSize: '14px',\r\n    marginBottom: '4px',\r\n  },\r\n  taskDescription: {\r\n    fontSize: '12px',\r\n    marginBottom: '4px',\r\n  },\r\n};\r\n\r\nexport default CalendarPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}