{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\WorkProgressTimesheet\\\\FrontEnd\\\\src\\\\admin-postNotification.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  pageContainer: {\n    backgroundColor: '#2C3E50',\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  formContainer: {\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n    borderRadius: '10px',\n    padding: '2rem',\n    backgroundColor: 'white',\n    width: '50%',\n    maxWidth: '500px',\n    display: 'grid',\n    gridGap: '1rem'\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    borderRadius: '5px',\n    border: '1px solid #ccc',\n    fontSize: '1rem'\n  },\n  textarea: {\n    gridColumn: '1 / -1',\n    // Make the textarea span across all columns\n    height: '5rem',\n    padding: '10px',\n    borderRadius: '5px',\n    border: '1px solid #ccc',\n    fontSize: '1rem',\n    resize: 'none'\n  },\n  select: {\n    width: '100%',\n    padding: '10px',\n    borderRadius: '5px',\n    border: '1px solid #ccc',\n    fontSize: '1rem',\n    background: 'white',\n    '-moz-appearance': 'none',\n    '-webkit-appearance': 'none',\n    appearance: 'none'\n  },\n  button: {\n    gridColumn: '1 / -1',\n    // Make the button span across all columns\n    backgroundColor: '#17A2B8',\n    color: 'white',\n    padding: '15px 30px',\n    borderRadius: '20px',\n    border: 'none',\n    fontSize: '1rem',\n    cursor: 'pointer',\n    transition: 'background-color 0.3s'\n  },\n  nextButton: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    backgroundColor: '#17A2B8',\n    color: 'white',\n    borderRadius: '50%',\n    width: '40px',\n    height: '40px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer',\n    fontSize: '24px',\n    border: 'none',\n    textDecoration: 'none',\n    outline: 'none'\n  }\n};\nfunction PostNotification() {\n  _s();\n  const [isHovered, setIsHovered] = useState(false);\n  const [formData, setFormData] = useState({\n    taskID: '',\n    Description: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('Form Data:', formData);\n    // Here you would typically handle the API call or other logic to post the notification\n  };\n  const handleNextClick = () => {\n    navigate('/admin'); // You should replace '/next' with the actual route you want to navigate to after posting the notification\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.pageContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      style: styles.formContainer,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        style: styles.select,\n        name: \"task\",\n        value: formData.taskid,\n        onChange: handleChange,\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          hidden: true,\n          children: \"Select Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: styles.textarea,\n        name: \"notificationDescription\",\n        value: formData.notificationDescription,\n        onChange: handleChange,\n        placeholder: \"Notification Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...styles.button,\n          backgroundColor: isHovered ? '#1DA1F2' : '#17A2B8'\n        },\n        onMouseEnter: () => setIsHovered(true),\n        onMouseLeave: () => setIsHovered(false),\n        type: \"submit\",\n        children: \"Post Notification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.nextButton,\n      onClick: handleNextClick,\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(PostNotification, \"ToZU6jwFGrGnxgHARVJNF98I/3Q=\", false, function () {\n  return [useNavigate];\n});\n_c = PostNotification;\nexport default PostNotification;\nvar _c;\n$RefreshReg$(_c, \"PostNotification\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","styles","pageContainer","backgroundColor","width","height","display","justifyContent","alignItems","formContainer","boxShadow","borderRadius","padding","maxWidth","gridGap","input","border","fontSize","textarea","gridColumn","resize","select","background","appearance","button","color","cursor","transition","nextButton","position","top","right","textDecoration","outline","PostNotification","_s","isHovered","setIsHovered","formData","setFormData","taskID","Description","navigate","handleChange","event","name","value","target","prevState","handleSubmit","preventDefault","console","log","handleNextClick","style","children","onSubmit","taskid","onChange","disabled","hidden","fileName","_jsxFileName","lineNumber","columnNumber","notificationDescription","placeholder","onMouseEnter","onMouseLeave","type","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/WorkProgressTimesheet/FrontEnd/src/admin-postNotification.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  pageContainer: {\r\n    backgroundColor: '#2C3E50',\r\n    width: '100vw',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  formContainer: {\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n    borderRadius: '10px',\r\n    padding: '2rem',\r\n    backgroundColor: 'white',\r\n    width: '50%',\r\n    maxWidth: '500px',\r\n    display: 'grid',\r\n    gridGap: '1rem',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    padding: '10px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ccc',\r\n    fontSize: '1rem',\r\n  },\r\n  textarea: {\r\n    gridColumn: '1 / -1', // Make the textarea span across all columns\r\n    height: '5rem',\r\n    padding: '10px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ccc',\r\n    fontSize: '1rem',\r\n    resize: 'none',\r\n  },\r\n  select: {\r\n    width: '100%',\r\n    padding: '10px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ccc',\r\n    fontSize: '1rem',\r\n    background: 'white',\r\n    '-moz-appearance': 'none',\r\n    '-webkit-appearance': 'none',\r\n    appearance: 'none',\r\n  },\r\n  button: {\r\n    gridColumn: '1 / -1', // Make the button span across all columns\r\n    backgroundColor: '#17A2B8',\r\n    color: 'white',\r\n    padding: '15px 30px',\r\n    borderRadius: '20px',\r\n    border: 'none',\r\n    fontSize: '1rem',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s',\r\n  },\r\n  nextButton: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    backgroundColor: '#17A2B8',\r\n    color: 'white',\r\n    borderRadius: '50%',\r\n    width: '40px',\r\n    height: '40px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    fontSize: '24px',\r\n    border: 'none',\r\n    textDecoration: 'none',\r\n    outline: 'none',\r\n  },\r\n};\r\n\r\nfunction PostNotification() {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    taskID: '',\r\n    Description: ''\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log('Form Data:', formData);\r\n    // Here you would typically handle the API call or other logic to post the notification\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    navigate('/admin'); // You should replace '/next' with the actual route you want to navigate to after posting the notification\r\n  };\r\n\r\n  return (\r\n    <div style={styles.pageContainer}>\r\n      <form style={styles.formContainer} onSubmit={handleSubmit}>\r\n\r\n        <select\r\n          style={styles.select}\r\n          name=\"task\"\r\n          value={formData.taskid}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"\" disabled hidden>Select Task</option>\r\n          {/* Add deadline options here */}\r\n        </select>\r\n        <textarea\r\n          style={styles.textarea}\r\n          name=\"notificationDescription\"\r\n          value={formData.notificationDescription}\r\n          onChange={handleChange}\r\n          placeholder=\"Notification Description\"\r\n        />\r\n        <button\r\n          style={{ ...styles.button, backgroundColor: isHovered ? '#1DA1F2' : '#17A2B8' }}\r\n          onMouseEnter={() => setIsHovered(true)}\r\n          onMouseLeave={() => setIsHovered(false)}\r\n          type=\"submit\"\r\n        >\r\n          Post Notification\r\n        </button>\r\n      </form>\r\n      <button\r\n        style={styles.nextButton}\r\n        onClick={handleNextClick}\r\n      >\r\n        &#x3e;\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostNotification;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}