{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\WorkProgressTimesheet\\\\FrontEnd\\\\src\\\\TimerContextTasks.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TimerContextTasks = /*#__PURE__*/createContext();\nexport const TimerProviderTasks = ({\n  children\n}) => {\n  _s();\n  const [timers, setTimers] = useState({});\n  useEffect(() => {\n    const interval = setInterval(() => {\n      updateTimers();\n    }, 1000); // update every second\n\n    return () => clearInterval(interval); // Cleanup interval on component unmount\n  }, [timers]);\n  const updateTimers = () => {\n    const updatedTimers = Object.entries(timers).reduce((acc, [taskId, timer]) => {\n      if (timer.isRunning) {\n        const now = Date.now();\n        const updatedDuration = now - timer.startTime;\n        acc[taskId] = {\n          ...timer,\n          totalTime: updatedDuration\n        };\n      } else {\n        acc[taskId] = timer;\n      }\n      return acc;\n    }, {});\n    setTimers(updatedTimers);\n  };\n  const startTimer = taskId => {\n    const startTime = Date.now();\n    setTimers(prevTimers => ({\n      ...prevTimers,\n      [taskId]: {\n        ...prevTimers[taskId],\n        startTime,\n        isRunning: true\n      }\n    }));\n  };\n  const stopTimer = taskId => {\n    const now = Date.now();\n    const updatedTimer = timers[taskId];\n    const duration = updatedTimer.startTime ? now - updatedTimer.startTime : 0;\n    setTimers(prevTimers => ({\n      ...prevTimers,\n      [taskId]: {\n        ...updatedTimer,\n        totalTime: duration,\n        startTime: null,\n        isRunning: false\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(TimerContextTasks.Provider, {\n    value: {\n      timers,\n      startTimer,\n      stopTimer\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(TimerProviderTasks, \"H3+TAsCtVenrch6dzdtUEFPks9M=\");\n_c = TimerProviderTasks;\nvar _c;\n$RefreshReg$(_c, \"TimerProviderTasks\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","TimerContextTasks","TimerProviderTasks","children","_s","timers","setTimers","interval","setInterval","updateTimers","clearInterval","updatedTimers","Object","entries","reduce","acc","taskId","timer","isRunning","now","Date","updatedDuration","startTime","totalTime","startTimer","prevTimers","stopTimer","updatedTimer","duration","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/WorkProgressTimesheet/FrontEnd/src/TimerContextTasks.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const TimerContextTasks = createContext();\r\n\r\nexport const TimerProviderTasks = ({ children }) => {\r\n    const [timers, setTimers] = useState({});\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            updateTimers();\r\n        }, 1000); // update every second\r\n\r\n        return () => clearInterval(interval); // Cleanup interval on component unmount\r\n    }, [timers]);\r\n\r\n    const updateTimers = () => {\r\n        const updatedTimers = Object.entries(timers).reduce((acc, [taskId, timer]) => {\r\n            if (timer.isRunning) {\r\n                const now = Date.now();\r\n                const updatedDuration = now - timer.startTime;\r\n                acc[taskId] = { ...timer, totalTime: updatedDuration };\r\n            } else {\r\n                acc[taskId] = timer;\r\n            }\r\n            return acc;\r\n        }, {});\r\n\r\n        setTimers(updatedTimers);\r\n    };\r\n\r\n    const startTimer = (taskId) => {\r\n        const startTime = Date.now();\r\n        setTimers(prevTimers => ({\r\n            ...prevTimers,\r\n            [taskId]: { ...prevTimers[taskId], startTime, isRunning: true }\r\n        }));\r\n    };\r\n\r\n    const stopTimer = (taskId) => {\r\n        const now = Date.now();\r\n        const updatedTimer = timers[taskId];\r\n        const duration = updatedTimer.startTime ? (now - updatedTimer.startTime) : 0;\r\n        setTimers(prevTimers => ({\r\n            ...prevTimers,\r\n            [taskId]: { ...updatedTimer, totalTime: duration, startTime: null, isRunning: false }\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <TimerContextTasks.Provider value={{ timers, startTimer, stopTimer }}>\r\n            {children}\r\n        </TimerContextTasks.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,iBAAiB,gBAAGL,aAAa,CAAC,CAAC;AAEhD,OAAO,MAAMM,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMS,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BC,YAAY,CAAC,CAAC;IAClB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;EAEZ,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAME,aAAa,GAAGC,MAAM,CAACC,OAAO,CAACR,MAAM,CAAC,CAACS,MAAM,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAEC,KAAK,CAAC,KAAK;MAC1E,IAAIA,KAAK,CAACC,SAAS,EAAE;QACjB,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;QACtB,MAAME,eAAe,GAAGF,GAAG,GAAGF,KAAK,CAACK,SAAS;QAC7CP,GAAG,CAACC,MAAM,CAAC,GAAG;UAAE,GAAGC,KAAK;UAAEM,SAAS,EAAEF;QAAgB,CAAC;MAC1D,CAAC,MAAM;QACHN,GAAG,CAACC,MAAM,CAAC,GAAGC,KAAK;MACvB;MACA,OAAOF,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IAENT,SAAS,CAACK,aAAa,CAAC;EAC5B,CAAC;EAED,MAAMa,UAAU,GAAIR,MAAM,IAAK;IAC3B,MAAMM,SAAS,GAAGF,IAAI,CAACD,GAAG,CAAC,CAAC;IAC5Bb,SAAS,CAACmB,UAAU,KAAK;MACrB,GAAGA,UAAU;MACb,CAACT,MAAM,GAAG;QAAE,GAAGS,UAAU,CAACT,MAAM,CAAC;QAAEM,SAAS;QAAEJ,SAAS,EAAE;MAAK;IAClE,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMQ,SAAS,GAAIV,MAAM,IAAK;IAC1B,MAAMG,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;IACtB,MAAMQ,YAAY,GAAGtB,MAAM,CAACW,MAAM,CAAC;IACnC,MAAMY,QAAQ,GAAGD,YAAY,CAACL,SAAS,GAAIH,GAAG,GAAGQ,YAAY,CAACL,SAAS,GAAI,CAAC;IAC5EhB,SAAS,CAACmB,UAAU,KAAK;MACrB,GAAGA,UAAU;MACb,CAACT,MAAM,GAAG;QAAE,GAAGW,YAAY;QAAEJ,SAAS,EAAEK,QAAQ;QAAEN,SAAS,EAAE,IAAI;QAAEJ,SAAS,EAAE;MAAM;IACxF,CAAC,CAAC,CAAC;EACP,CAAC;EAED,oBACIlB,OAAA,CAACC,iBAAiB,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,MAAM;MAAEmB,UAAU;MAAEE;IAAU,CAAE;IAAAvB,QAAA,EAChEA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAErC,CAAC;AAAC9B,EAAA,CAjDWF,kBAAkB;AAAAiC,EAAA,GAAlBjC,kBAAkB;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}