{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\WorkProgressTimesheet\\\\FrontEnd\\\\src\\\\employee-calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faCalendarAlt, faClipboardList, faBell } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarPage = () => {\n  _s();\n  let navigate = useNavigate();\n\n  // Function to add days to a date\n  const addDays = (date, days) => {\n    const result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  };\n\n  // Helper function to format date for display\n  const formatDate = date => {\n    return date.toLocaleDateString('en-GB', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      weekday: 'long'\n    });\n  };\n\n  // Initialize state to today and the following two days\n  const [currentDateRange, setCurrentDateRange] = useState({\n    startDate: new Date(),\n    endDate: addDays(new Date(), 2)\n  });\n  const [tasks, setTasks] = useState({});\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const {\n        startDate,\n        endDate\n      } = currentDateRange;\n      const userId = localStorage.getItem('userId');\n      console.log(\"Sending request with startDate and endDate: \", startDate, endDate);\n      try {\n        const response = await axios.get(`http://localhost:8081/api/task/three-day-window`, {\n          headers: {\n            'user-id': userId\n          },\n          params: {\n            startDate: startDate.toISOString().split('T')[0],\n            endDate: endDate.toISOString().split('T')[0]\n          }\n        });\n        let newTasks = {};\n        response.data.forEach(dateObj => {\n          dateObj.tasks.forEach(task => {\n            console.log(\"Date string before conversion:\", task.dueDate);\n            if (!task.dueDate) {\n              console.error(\"Task due date is undefined:\", task);\n              return; // Skip this task if the dueDate is undefined\n            }\n            try {\n              const key = new Date(task.dueDate).toISOString().split('T')[0];\n              if (!newTasks[key]) {\n                newTasks[key] = [];\n              }\n              newTasks[key].push(task);\n            } catch (e) {\n              console.error(\"Error converting date:\", task.dueDate, e);\n            }\n          });\n        });\n        setTasks(prevTasks => {\n          const updatedTasks = {\n            ...prevTasks\n          };\n          response.data.forEach(dateObj => {\n            dateObj.tasks.forEach(task => {\n              const key = new Date(task.dueDate).toISOString().split('T')[0];\n              if (!updatedTasks[key]) {\n                updatedTasks[key] = [];\n              }\n              updatedTasks[key].push(task);\n            });\n          });\n          return updatedTasks;\n        });\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [currentDateRange]);\n\n  // Handler for previous arrow click\n  const handlePrevClick = () => {\n    setCurrentDateRange(prevRange => {\n      const newStart = addDays(prevRange.startDate, -3);\n      return {\n        startDate: newStart,\n        endDate: addDays(newStart, 2)\n      };\n    });\n  };\n\n  // Handler for next arrow click\n  const handleNextClick = () => {\n    setCurrentDateRange(prevRange => {\n      const newStart = addDays(prevRange.endDate, 1);\n      return {\n        startDate: newStart,\n        endDate: addDays(newStart, 2)\n      };\n    });\n  };\n\n  // Event handlers for button clicks\n  const handleHomeClick = () => {\n    navigate(\"/employee-dashboard\");\n  };\n  const handleCalendarClick = () => {\n    navigate(\"/employee-calendar\");\n  };\n  const handleClipboardClick = () => {\n    navigate(\"/employee-tasks\");\n  };\n  const handleBellClick = () => {\n    navigate(\"/employee-notifications\");\n  };\n\n  // TaskColumn component for displaying tasks for a given date\n  const TaskColumn = ({\n    date\n  }) => {\n    const key = date.toISOString().split('T')[0];\n    const tasksForDate = tasks[key] || [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.taskColumn,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.dayHeader,\n        children: formatDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), tasksForDate.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.taskCard,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.taskName,\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.taskDueDate,\n          children: [\"Due Date: \", formatDate(new Date(task.dueDate))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.taskDescription,\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Generate an array of dates for the TaskColumns\n  const datesArray = Array.from({\n    length: 3\n  }, (_, i) => addDays(currentDateRange.startDate, i));\n\n  // Calendar Navigator component with handlers\n  const CalendarNavigator = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.navigatorContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.navigatorButton,\n      onClick: handlePrevClick,\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.dateRange,\n      children: `${formatDate(currentDateRange.startDate)} - ${formatDate(currentDateRange.endDate)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.navigatorButton,\n      onClick: handleNextClick,\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.topBar,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...styles.topBarItem,\n          ...styles.button\n        },\n        onClick: handleHomeClick,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faHome,\n          style: styles.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...styles.topBarItem,\n          ...styles.button\n        },\n        onClick: handleCalendarClick,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCalendarAlt,\n          style: styles.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...styles.topBarItem,\n          ...styles.button\n        },\n        onClick: handleClipboardClick,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faClipboardList,\n          style: styles.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...styles.topBarItem,\n          ...styles.button\n        },\n        onClick: handleBellClick,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faBell,\n          style: styles.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarNavigator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.columnsContainer,\n      children: datesArray.map((date, index) => /*#__PURE__*/_jsxDEV(TaskColumn, {\n        date: date\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles for the UI components\n_s(CalendarPage, \"Bl0oCJfMyh6NqpHP/PnP86d5CCA=\", false, function () {\n  return [useNavigate];\n});\n_c = CalendarPage;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    backgroundColor: '#E5E5E5'\n  },\n  topBar: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '10px',\n    backgroundColor: '#00BCD4'\n  },\n  topBarItem: {\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '20px',\n    height: '32px',\n    backgroundColor: '#FFFFFF',\n    borderRadius: '50%',\n    margin: '20px',\n    border: 'none'\n  },\n  button: {\n    cursor: 'pointer',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: '20px',\n    backgroundColor: '#00BCD4',\n    border: 'none'\n  },\n  icon: {\n    fontSize: '24px',\n    color: 'white'\n  },\n  navigatorContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '10px',\n    backgroundColor: '#00BCD4'\n  },\n  navigatorButton: {\n    cursor: 'pointer',\n    fontSize: '16px',\n    color: '#FFFFFF',\n    backgroundColor: 'transparent',\n    border: 'none',\n    margin: '0 10px'\n  },\n  dateRange: {\n    color: '#FFFFFF',\n    fontSize: '16px',\n    margin: '0 10px'\n  },\n  columnsContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '10px'\n  },\n  taskColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '0 10px',\n    backgroundColor: '#00BCD4',\n    borderRadius: '6px',\n    width: '200px',\n    padding: '10px'\n  },\n  dayHeader: {\n    color: '#FFFFFF',\n    marginBottom: '10px',\n    fontSize: '18px'\n  },\n  taskCard: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: '4px',\n    margin: '10px 0',\n    padding: '10px'\n  },\n  taskName: {\n    fontSize: '16px',\n    fontWeight: 'bold',\n    marginBottom: '4px'\n  },\n  taskDueDate: {\n    fontSize: '14px',\n    marginBottom: '4px'\n  },\n  taskDescription: {\n    fontSize: '12px',\n    marginBottom: '4px'\n  }\n};\nexport default CalendarPage;\nvar _c;\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","FontAwesomeIcon","faHome","faCalendarAlt","faClipboardList","faBell","jsxDEV","_jsxDEV","CalendarPage","_s","navigate","addDays","date","days","result","Date","setDate","getDate","formatDate","toLocaleDateString","day","month","year","weekday","currentDateRange","setCurrentDateRange","startDate","endDate","tasks","setTasks","fetchTasks","userId","localStorage","getItem","console","log","response","get","headers","params","toISOString","split","newTasks","data","forEach","dateObj","task","dueDate","error","key","push","e","prevTasks","updatedTasks","handlePrevClick","prevRange","newStart","handleNextClick","handleHomeClick","handleCalendarClick","handleClipboardClick","handleBellClick","TaskColumn","tasksForDate","style","styles","taskColumn","children","dayHeader","fileName","_jsxFileName","lineNumber","columnNumber","map","index","taskCard","taskName","name","taskDueDate","taskDescription","description","datesArray","Array","from","length","_","i","CalendarNavigator","navigatorContainer","navigatorButton","onClick","dateRange","container","topBar","topBarItem","button","icon","columnsContainer","_c","display","flexDirection","height","backgroundColor","justifyContent","padding","alignItems","width","borderRadius","margin","border","cursor","fontSize","color","marginBottom","fontWeight","$RefreshReg$"],"sources":["C:/Projects/WorkProgressTimesheet/FrontEnd/src/employee-calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faCalendarAlt, faClipboardList, faBell } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst CalendarPage = () => {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  // Function to add days to a date\r\n  const addDays = (date, days) => {\r\n    const result = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  };\r\n\r\n  // Helper function to format date for display\r\n  const formatDate = (date) => {\r\n    return date.toLocaleDateString('en-GB', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      weekday: 'long',\r\n    });\r\n  };\r\n\r\n  // Initialize state to today and the following two days\r\n  const [currentDateRange, setCurrentDateRange] = useState({\r\n    startDate: new Date(),\r\n    endDate: addDays(new Date(), 2),\r\n  });\r\n\r\n  const [tasks, setTasks] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n        const { startDate, endDate } = currentDateRange;\r\n        const userId = localStorage.getItem('userId');\r\n\r\n        console.log(\"Sending request with startDate and endDate: \", startDate, endDate);\r\n\r\n        try {\r\n            const response = await axios.get(`http://localhost:8081/api/task/three-day-window`, {\r\n                headers: {\r\n                    'user-id': userId,\r\n                },\r\n                params: {\r\n                    startDate: startDate.toISOString().split('T')[0],\r\n                    endDate: endDate.toISOString().split('T')[0]\r\n                }\r\n            });\r\n\r\n            let newTasks = {};\r\n            response.data.forEach(dateObj => {\r\n              dateObj.tasks.forEach(task => {\r\n                console.log(\"Date string before conversion:\", task.dueDate);\r\n                if (!task.dueDate) {\r\n                  console.error(\"Task due date is undefined:\", task);\r\n                  return; // Skip this task if the dueDate is undefined\r\n                }\r\n                try {\r\n                  const key = new Date(task.dueDate).toISOString().split('T')[0];\r\n                  if (!newTasks[key]) {\r\n                    newTasks[key] = [];\r\n                  }\r\n                  newTasks[key].push(task);\r\n                } catch (e) {\r\n                  console.error(\"Error converting date:\", task.dueDate, e);\r\n                }\r\n              });\r\n            });\r\n            \r\n            \r\n            setTasks(prevTasks => {\r\n              const updatedTasks = { ...prevTasks };\r\n              response.data.forEach(dateObj => {\r\n                dateObj.tasks.forEach(task => {\r\n                  const key = new Date(task.dueDate).toISOString().split('T')[0];\r\n                  if (!updatedTasks[key]) {\r\n                    updatedTasks[key] = [];\r\n                  }\r\n                  updatedTasks[key].push(task);\r\n                });\r\n              });\r\n              return updatedTasks;\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching tasks:', error);\r\n        }\r\n    };\r\n\r\n    fetchTasks();\r\n}, [currentDateRange]);\r\n\r\n  // Handler for previous arrow click\r\n  const handlePrevClick = () => {\r\n    setCurrentDateRange((prevRange) => {\r\n      const newStart = addDays(prevRange.startDate, -3);\r\n      return { startDate: newStart, endDate: addDays(newStart, 2) };\r\n    });\r\n  };\r\n\r\n  // Handler for next arrow click\r\n  const handleNextClick = () => {\r\n    setCurrentDateRange((prevRange) => {\r\n      const newStart = addDays(prevRange.endDate, 1);\r\n      return { startDate: newStart, endDate: addDays(newStart, 2) };\r\n    });\r\n  };\r\n\r\n  // Event handlers for button clicks\r\n  const handleHomeClick = () => {\r\n    navigate(\"/employee-dashboard\");\r\n  };\r\n\r\n  const handleCalendarClick = () => {\r\n    navigate(\"/employee-calendar\");\r\n  };\r\n\r\n  const handleClipboardClick = () => {\r\n    navigate(\"/employee-tasks\");\r\n  };\r\n\r\n  const handleBellClick = () => {\r\n    navigate(\"/employee-notifications\");\r\n  };\r\n\r\n  // TaskColumn component for displaying tasks for a given date\r\n  const TaskColumn = ({ date }) => {\r\n    const key = date.toISOString().split('T')[0];\r\n    const tasksForDate = tasks[key] || [];\r\n    return (\r\n      <div style={styles.taskColumn}>\r\n        <div style={styles.dayHeader}>{formatDate(date)}</div>\r\n        {tasksForDate.map((task, index) => (\r\n          <div key={index} style={styles.taskCard}>\r\n            <div style={styles.taskName}>{task.name}</div>\r\n            <div style={styles.taskDueDate}>Due Date: {formatDate(new Date(task.dueDate))}</div>\r\n            <div style={styles.taskDescription}>{task.description}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Generate an array of dates for the TaskColumns\r\n  const datesArray = Array.from({ length: 3 }, (_, i) => \r\n    addDays(currentDateRange.startDate, i)\r\n  );\r\n\r\n  // Calendar Navigator component with handlers\r\n  const CalendarNavigator = () => (\r\n    <div style={styles.navigatorContainer}>\r\n      <button style={styles.navigatorButton} onClick={handlePrevClick}>{\"<\"}</button>\r\n      <div style={styles.dateRange}>\r\n        {`${formatDate(currentDateRange.startDate)} - ${formatDate(currentDateRange.endDate)}`}\r\n      </div>\r\n      <button style={styles.navigatorButton} onClick={handleNextClick}>{\">\"}</button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.topBar}>\r\n        <button style={{ ...styles.topBarItem, ...styles.button }} onClick={handleHomeClick}>\r\n          <FontAwesomeIcon icon={faHome} style={styles.icon} />\r\n        </button>\r\n        <button style={{ ...styles.topBarItem, ...styles.button }} onClick={handleCalendarClick}>\r\n          <FontAwesomeIcon icon={faCalendarAlt} style={styles.icon} />\r\n        </button>\r\n        <button style={{ ...styles.topBarItem, ...styles.button }} onClick={handleClipboardClick}>\r\n          <FontAwesomeIcon icon={faClipboardList} style={styles.icon} />\r\n        </button>\r\n        <button style={{ ...styles.topBarItem, ...styles.button }} onClick={handleBellClick}>\r\n          <FontAwesomeIcon icon={faBell} style={styles.icon} />\r\n        </button>\r\n      </div>\r\n      <CalendarNavigator />\r\n      <div style={styles.columnsContainer}>\r\n        {datesArray.map((date, index) => (\r\n          <TaskColumn key={index} date={date} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Styles for the UI components\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100vh',\r\n    backgroundColor: '#E5E5E5',\r\n  },\r\n  topBar: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '10px',\r\n    backgroundColor: '#00BCD4',\r\n  },\r\n  topBarItem: {\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '20px',\r\n    height: '32px',\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: '50%',\r\n    margin: '20px',\r\n    border: 'none',\r\n  },\r\n  button: {\r\n    cursor: 'pointer',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: '20px',\r\n    backgroundColor: '#00BCD4',\r\n    border: 'none',\r\n  },\r\n  icon: {\r\n    fontSize: '24px',\r\n    color: 'white',\r\n  },\r\n  navigatorContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n    backgroundColor: '#00BCD4',\r\n  },\r\n  navigatorButton: {\r\n    cursor: 'pointer',\r\n    fontSize: '16px',\r\n    color: '#FFFFFF',\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    margin: '0 10px',\r\n  },\r\n  dateRange: {\r\n    color: '#FFFFFF',\r\n    fontSize: '16px',\r\n    margin: '0 10px',\r\n  },\r\n  columnsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '10px',\r\n  },\r\n  taskColumn: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: '0 10px',\r\n    backgroundColor: '#00BCD4',\r\n    borderRadius: '6px',\r\n    width: '200px',\r\n    padding: '10px',\r\n  },\r\n  dayHeader: {\r\n    color: '#FFFFFF',\r\n    marginBottom: '10px',\r\n    fontSize: '18px',\r\n  },\r\n  taskCard: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: '4px',\r\n    margin: '10px 0',\r\n    padding: '10px',\r\n  },\r\n  taskName: {\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n    marginBottom: '4px',\r\n  },\r\n  taskDueDate: {\r\n    fontSize: '14px',\r\n    marginBottom: '4px',\r\n  },\r\n  taskDescription: {\r\n    fontSize: '12px',\r\n    marginBottom: '4px',\r\n  },\r\n};\r\n\r\nexport default CalendarPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}